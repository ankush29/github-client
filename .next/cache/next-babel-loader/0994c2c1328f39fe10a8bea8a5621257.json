{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\github-client\\\\containers\\\\SearchRepoList\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { SimpleCard, Loader, Grid, Typography } from \"../../components\";\nimport { Query } from 'react-apollo';\n\nconst SearchRepoList = ({\n  query\n}) => __jsx(Query, {\n  query: query,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) {\n    return __jsx(Grid, {\n      direction: \"row\",\n      justify: \"center\",\n      container: true,\n      spacing: 2,\n      style: {\n        padding: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(Loader, {\n      size: 300,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }));\n  }\n\n  if (error) {\n    return __jsx(Grid, {\n      direction: \"row\",\n      justify: \"center\",\n      container: true,\n      spacing: 24,\n      style: {\n        padding: 24\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(Typography, {\n      variant: \"subtitle2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Please Sign In to fetch data\"));\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, data.search.edges.map(repo => __jsx(Grid, {\n    key: repo.node.name,\n    item: true,\n    xs: 6,\n    sm: 4,\n    lg: 3,\n    xl: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(SimpleCard, {\n    title: repo.node.name,\n    description: repo.node.description,\n    url: repo.node.url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))));\n});\n\nSearchRepoList.propTypes = {\n  query: PropTypes.node.isRequired\n};\nexport default SearchRepoList;","map":{"version":3,"sources":["C:/Users/Admin/Documents/github-client/containers/SearchRepoList/index.js"],"names":["React","PropTypes","SimpleCard","Loader","Grid","Typography","Query","SearchRepoList","query","loading","error","data","padding","search","edges","map","repo","node","name","description","url","propTypes","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,UADF,EACcC,MADd,EACsBC,IADtB,EAC4BC,UAD5B;AAGA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACrB,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa;AACX,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,OAAO,EAAC,QAA9B;AAAuC,MAAA,SAAS,MAAhD;AAAiD,MAAA,OAAO,EAAE,CAA1D;AAA6D,MAAA,KAAK,EAAE;AAAEG,QAAAA,OAAO,EAAE;AAAX,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AACD,MAAIF,KAAJ,EAAW;AACT,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,KAAhB;AAAsB,MAAA,OAAO,EAAC,QAA9B;AAAuC,MAAA,SAAS,MAAhD;AAAiD,MAAA,OAAO,EAAE,EAA1D;AAA8D,MAAA,KAAK,EAAE;AAAEE,QAAAA,OAAO,EAAE;AAAX,OAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF;AAKD;;AACD,SACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IACzB,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,IAAL,CAAUC,IAArB;AAA2B,IAAA,IAAI,MAA/B;AAAgC,IAAA,EAAE,EAAE,CAApC;AAAuC,IAAA,EAAE,EAAE,CAA3C;AAA8C,IAAA,EAAE,EAAE,CAAlD;AAAqD,IAAA,EAAE,EAAE,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,KAAK,EAAEF,IAAI,CAACC,IAAL,CAAUC,IADnB;AAEE,IAAA,WAAW,EAAEF,IAAI,CAACC,IAAL,CAAUE,WAFzB;AAGE,IAAA,GAAG,EAAEH,IAAI,CAACC,IAAL,CAAUG,GAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF;AAaD,CA7BH,CADF;;AAkCAb,cAAc,CAACc,SAAf,GAA2B;AACzBb,EAAAA,KAAK,EAAEP,SAAS,CAACgB,IAAV,CAAeK;AADG,CAA3B;AAIA,eAAef,cAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  SimpleCard, Loader, Grid, Typography,\r\n} from 'components';\r\nimport { Query } from 'react-apollo';\r\n\r\nconst SearchRepoList = ({ query }) => (\r\n  <Query query={query}>\r\n    {({ loading, error, data }) => {\r\n      if (loading) {\r\n        return (\r\n          <Grid direction=\"row\" justify=\"center\" container spacing={2} style={{ padding: 24 }}>\r\n            <Loader size={300} />\r\n          </Grid>\r\n        );\r\n      }\r\n      if (error) {\r\n        return (\r\n          <Grid direction=\"row\" justify=\"center\" container spacing={24} style={{ padding: 24 }}>\r\n            <Typography variant=\"subtitle2\">Please Sign In to fetch data</Typography>\r\n          </Grid>\r\n        );\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          {data.search.edges.map(repo => (\r\n            <Grid key={repo.node.name} item xs={6} sm={4} lg={3} xl={2}>\r\n              <SimpleCard\r\n                title={repo.node.name}\r\n                description={repo.node.description}\r\n                url={repo.node.url}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </React.Fragment>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nSearchRepoList.propTypes = {\r\n  query: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default SearchRepoList;\r\n"]},"metadata":{},"sourceType":"module"}