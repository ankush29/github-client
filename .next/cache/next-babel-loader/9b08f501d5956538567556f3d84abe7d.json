{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\github-client\\\\pages\\\\_document.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport flush from 'styled-jsx/server';\n\nclass MainDocument extends Document {\n  render() {\n    const {\n      pageContext\n    } = this.props;\n    return __jsx(\"html\", {\n      lang: \"en\",\n      dir: \"ltr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, __jsx(Head, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(\"meta\", {\n      charSet: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: 'user-scalable=0, initial-scale=1, ' + 'minimum-scale=1, width=device-width, height=device-height',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: pageContext.theme.palette.primary.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })), __jsx(\"body\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Main, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), __jsx(NextScript, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })));\n  }\n\n}\n\nMainDocument.getInitialProps = ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render the app and page and get the context of the page with collected side effects.\n  let pageContext;\n  const page = ctx.renderPage(Component => {\n    const WrappedComponent = props => {\n      pageContext = props.pageContext;\n      return __jsx(Component, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }));\n    };\n\n    WrappedComponent.propTypes = {\n      pageContext: PropTypes.shape({}).isRequired\n    };\n    return WrappedComponent;\n  });\n  return _objectSpread({}, page, {\n    pageContext,\n    // The styles fragment is rendered after the app and page rendering finish.\n    styles: __jsx(React.Fragment, null, __jsx(\"style\", {\n      id: \"jss-server-side\" // eslint-disable-next-line react/no-danger\n      ,\n      dangerouslySetInnerHTML: {\n        __html: pageContext.sheetsRegistry.toString()\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), flush() || null)\n  });\n};\n\nexport default MainDocument;","map":{"version":3,"sources":["C:/Users/Admin/Documents/github-client/pages/_document.js"],"names":["React","PropTypes","Document","Head","Main","NextScript","flush","MainDocument","render","pageContext","props","theme","palette","primary","main","getInitialProps","ctx","page","renderPage","Component","WrappedComponent","propTypes","shape","isRequired","styles","__html","sheetsRegistry","toString"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,YAAN,SAA2BL,QAA3B,CAAoC;AAClCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAkB,KAAKC,KAA7B;AAEA,WACE;AAAM,MAAA,IAAI,EAAC,IAAX;AAAgB,MAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EACL,uCACA,2DAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAWE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAED,WAAW,CAACE,KAAZ,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkCC,IAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAYE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,4DAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,CADF;AAyBD;;AA7BiC;;AAgCpCP,YAAY,CAACQ,eAAb,GAAgCC,GAAD,IAAS;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAIP,WAAJ;AAEA,QAAMQ,IAAI,GAAGD,GAAG,CAACE,UAAJ,CAAgBC,SAAD,IAAe;AACzC,UAAMC,gBAAgB,GAAIV,KAAD,IAAW;AAClCD,MAAAA,WAAW,GAAGC,KAAK,CAACD,WAApB;AAEA,aAAO,MAAC,SAAD,eAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAJD;;AAMAU,IAAAA,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BZ,MAAAA,WAAW,EAAER,SAAS,CAACqB,KAAV,CAAgB,EAAhB,EAAoBC;AADN,KAA7B;AAIA,WAAOH,gBAAP;AACD,GAZY,CAAb;AAcA,2BACKH,IADL;AAEER,IAAAA,WAFF;AAGE;AACAe,IAAAA,MAAM,EACJ,4BACE;AACE,MAAA,EAAE,EAAC,iBADL,CAEE;AAFF;AAGE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEhB,WAAW,CAACiB,cAAZ,CAA2BC,QAA3B;AAAV,OAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGrB,KAAK,MAAM,IANd;AALJ;AAeD,CAvDD;;AAyDA,eAAeC,YAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Document, { Head, Main, NextScript } from 'next/document';\r\nimport flush from 'styled-jsx/server';\r\n\r\nclass MainDocument extends Document {\r\n  render() {\r\n    const { pageContext } = this.props;\r\n\r\n    return (\r\n      <html lang=\"en\" dir=\"ltr\">\r\n        <Head>\r\n          <meta charSet=\"utf-8\" />\r\n          {/* Use minimum-scale=1 to enable GPU rasterization */}\r\n          <meta\r\n            name=\"viewport\"\r\n            content={\r\n              'user-scalable=0, initial-scale=1, ' +\r\n              'minimum-scale=1, width=device-width, height=device-height'\r\n            }\r\n          />\r\n          {/* PWA primary color */}\r\n          <meta name=\"theme-color\" content={pageContext.theme.palette.primary.main} />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"\r\n          />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nMainDocument.getInitialProps = (ctx) => {\r\n  // Resolution order\r\n  //\r\n  // On the server:\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. document.getInitialProps\r\n  // 4. app.render\r\n  // 5. page.render\r\n  // 6. document.render\r\n  //\r\n  // On the server with error:\r\n  // 1. document.getInitialProps\r\n  // 2. app.render\r\n  // 3. page.render\r\n  // 4. document.render\r\n  //\r\n  // On the client\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. app.render\r\n  // 4. page.render\r\n\r\n  // Render the app and page and get the context of the page with collected side effects.\r\n  let pageContext;\r\n\r\n  const page = ctx.renderPage((Component) => {\r\n    const WrappedComponent = (props) => {\r\n      pageContext = props.pageContext;\r\n\r\n      return <Component {...props} />;\r\n    };\r\n\r\n    WrappedComponent.propTypes = {\r\n      pageContext: PropTypes.shape({}).isRequired,\r\n    };\r\n\r\n    return WrappedComponent;\r\n  });\r\n\r\n  return {\r\n    ...page,\r\n    pageContext,\r\n    // The styles fragment is rendered after the app and page rendering finish.\r\n    styles: (\r\n      <>\r\n        <style\r\n          id=\"jss-server-side\"\r\n          // eslint-disable-next-line react/no-danger\r\n          dangerouslySetInnerHTML={{ __html: pageContext.sheetsRegistry.toString() }}\r\n        />\r\n        {flush() || null }\r\n      </>\r\n    ),\r\n  };\r\n};\r\n\r\nexport default MainDocument"]},"metadata":{},"sourceType":"module"}